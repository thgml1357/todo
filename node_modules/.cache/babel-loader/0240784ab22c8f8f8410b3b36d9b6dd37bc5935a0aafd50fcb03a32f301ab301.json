{"ast":null,"code":"import i18next from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport en from \"./en/translation.json\";\nimport { convertLanguageJsonToObject } from \"./translations\";\nexport const translationsJson = {\n  en: {\n    translation: en\n  }\n};\n\n// Create the 'translations' object to provide full intellisense support for the static json files.\nconvertLanguageJsonToObject(en);\nexport const i18n = i18next\n// pass the i18n instance to react-i18next.\n.use(initReactI18next)\n// detect user language\n// learn more: https://github.com/i18next/i18next-browser-languageDetector\n.use(LanguageDetector)\n// init i18next\n// for all options read: https://www.i18next.com/overview/configuration-options\n.init({\n  resources: translationsJson,\n  fallbackLng: \"en\",\n  debug: process.env.NODE_ENV !== \"production\" && process.env.NODE_ENV !== \"test\",\n  interpolation: {\n    escapeValue: false // not needed for react as it escapes by default\n  }\n});","map":{"version":3,"names":["i18next","initReactI18next","LanguageDetector","en","convertLanguageJsonToObject","translationsJson","translation","i18n","use","init","resources","fallbackLng","debug","process","env","NODE_ENV","interpolation","escapeValue"],"sources":["/Users/jeonsohee/Desktop/todo/src/locales/i18n.ts"],"sourcesContent":["import i18next from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\nimport en from \"./en/translation.json\";\nimport { convertLanguageJsonToObject } from \"./translations\";\n\nexport const translationsJson = {\n  en: {\n    translation: en,\n  },\n};\n\n// Create the 'translations' object to provide full intellisense support for the static json files.\nconvertLanguageJsonToObject(en);\n\nexport const i18n = i18next\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    resources: translationsJson,\n    fallbackLng: \"en\",\n    debug:\n      process.env.NODE_ENV !== \"production\" && process.env.NODE_ENV !== \"test\",\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n  });\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAC7B,SAASC,gBAAgB,QAAQ,eAAe;AAChD,OAAOC,gBAAgB,MAAM,kCAAkC;AAE/D,OAAOC,EAAE,MAAM,uBAAuB;AACtC,SAASC,2BAA2B,QAAQ,gBAAgB;AAE5D,OAAO,MAAMC,gBAAgB,GAAG;EAC9BF,EAAE,EAAE;IACFG,WAAW,EAAEH;EACf;AACF,CAAC;;AAED;AACAC,2BAA2B,CAACD,EAAE,CAAC;AAE/B,OAAO,MAAMI,IAAI,GAAGP;AAClB;AAAA,CACCQ,GAAG,CAACP,gBAAgB;AACrB;AACA;AAAA,CACCO,GAAG,CAACN,gBAAgB;AACrB;AACA;AAAA,CACCO,IAAI,CAAC;EACJC,SAAS,EAAEL,gBAAgB;EAC3BM,WAAW,EAAE,IAAI;EACjBC,KAAK,EACHC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIF,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,MAAM;EAE1EC,aAAa,EAAE;IACbC,WAAW,EAAE,KAAK,CAAE;EACtB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}