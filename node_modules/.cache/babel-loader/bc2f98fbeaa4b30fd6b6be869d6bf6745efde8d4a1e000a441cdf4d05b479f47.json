{"ast":null,"code":"/**\n * Create the store with dynamic reducers\n */\n\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { createInjectorsEnhancer } from \"redux-injectors\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { createReducer } from \"./reducers\";\nexport function configureAppStore() {\n  const reduxSagaMonitorOptions = {};\n  const sagaMiddleware = createSagaMiddleware(reduxSagaMonitorOptions);\n  const {\n    run: runSaga\n  } = sagaMiddleware;\n\n  // Create the store with saga middleware\n  const middlewares = [sagaMiddleware];\n  const enhancers = [createInjectorsEnhancer({\n    createReducer,\n    runSaga\n  })];\n  const store = configureStore({\n    reducer: createReducer(),\n    middleware: [...getDefaultMiddleware(), ...middlewares],\n    devTools: process.env.NODE_ENV !== \"production\",\n    enhancers\n  });\n  return store;\n}","map":{"version":3,"names":["configureStore","getDefaultMiddleware","createInjectorsEnhancer","createSagaMiddleware","createReducer","configureAppStore","reduxSagaMonitorOptions","sagaMiddleware","run","runSaga","middlewares","enhancers","store","reducer","middleware","devTools","process","env","NODE_ENV"],"sources":["/Users/jeonsohee/Desktop/todo/src/store/configureStore.ts"],"sourcesContent":["/**\n * Create the store with dynamic reducers\n */\n\nimport {\n  configureStore,\n  getDefaultMiddleware,\n  StoreEnhancer,\n} from \"@reduxjs/toolkit\";\nimport { createInjectorsEnhancer } from \"redux-injectors\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport { createReducer } from \"./reducers\";\n\nexport function configureAppStore() {\n  const reduxSagaMonitorOptions = {};\n  const sagaMiddleware = createSagaMiddleware(reduxSagaMonitorOptions);\n  const { run: runSaga } = sagaMiddleware;\n\n  // Create the store with saga middleware\n  const middlewares = [sagaMiddleware];\n\n  const enhancers = [\n    createInjectorsEnhancer({\n      createReducer,\n      runSaga,\n    }),\n  ] as StoreEnhancer[];\n\n  const store = configureStore({\n    reducer: createReducer(),\n    middleware: [...getDefaultMiddleware(), ...middlewares],\n    devTools: process.env.NODE_ENV !== \"production\",\n    enhancers,\n  });\n\n  return store;\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEA,SACEA,cAAc,EACdC,oBAAoB,QAEf,kBAAkB;AACzB,SAASC,uBAAuB,QAAQ,iBAAiB;AACzD,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,SAASC,aAAa,QAAQ,YAAY;AAE1C,OAAO,SAASC,iBAAiB,GAAG;EAClC,MAAMC,uBAAuB,GAAG,CAAC,CAAC;EAClC,MAAMC,cAAc,GAAGJ,oBAAoB,CAACG,uBAAuB,CAAC;EACpE,MAAM;IAAEE,GAAG,EAAEC;EAAQ,CAAC,GAAGF,cAAc;;EAEvC;EACA,MAAMG,WAAW,GAAG,CAACH,cAAc,CAAC;EAEpC,MAAMI,SAAS,GAAG,CAChBT,uBAAuB,CAAC;IACtBE,aAAa;IACbK;EACF,CAAC,CAAC,CACgB;EAEpB,MAAMG,KAAK,GAAGZ,cAAc,CAAC;IAC3Ba,OAAO,EAAET,aAAa,EAAE;IACxBU,UAAU,EAAE,CAAC,GAAGb,oBAAoB,EAAE,EAAE,GAAGS,WAAW,CAAC;IACvDK,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;IAC/CP;EACF,CAAC,CAAC;EAEF,OAAOC,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}