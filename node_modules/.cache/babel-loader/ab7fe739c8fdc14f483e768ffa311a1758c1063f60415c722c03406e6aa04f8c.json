{"ast":null,"code":"/* --- STATE --- */\n\nexport let RepoErrorType;\n\n/* \n  If you want to use 'ContainerState' keyword everywhere in your feature folder, \n  instead of the 'HomePageState' keyword.\n*/\n(function (RepoErrorType) {\n  RepoErrorType[RepoErrorType[\"RESPONSE_ERROR\"] = 1] = \"RESPONSE_ERROR\";\n  RepoErrorType[RepoErrorType[\"USER_NOT_FOUND\"] = 2] = \"USER_NOT_FOUND\";\n  RepoErrorType[RepoErrorType[\"USERNAME_EMPTY\"] = 3] = \"USERNAME_EMPTY\";\n  RepoErrorType[RepoErrorType[\"USER_HAS_NO_REPO\"] = 4] = \"USER_HAS_NO_REPO\";\n  RepoErrorType[RepoErrorType[\"GITHUB_RATE_LIMIT\"] = 5] = \"GITHUB_RATE_LIMIT\";\n})(RepoErrorType || (RepoErrorType = {}));","map":{"version":3,"names":["RepoErrorType"],"sources":["/Users/jeonsohee/Desktop/todo/src/app/pages/HomePage/Features/GithubRepoForm/slice/types.ts"],"sourcesContent":["import { Repo } from 'types/Repo';\n\n/* --- STATE --- */\nexport interface GithubRepoFormState {\n  username: string;\n  loading: boolean;\n  error?: RepoErrorType | null;\n  repositories: Repo[];\n}\n\nexport const enum RepoErrorType {\n  RESPONSE_ERROR = 1,\n  USER_NOT_FOUND = 2,\n  USERNAME_EMPTY = 3,\n  USER_HAS_NO_REPO = 4,\n  GITHUB_RATE_LIMIT = 5,\n}\n\n/* \n  If you want to use 'ContainerState' keyword everywhere in your feature folder, \n  instead of the 'HomePageState' keyword.\n*/\nexport type ContainerState = GithubRepoFormState;\n"],"mappings":"AAEA;;AAQA,WAAkBA,aAAa;;AAQ/B;AACA;AACA;AACA;AAHA,WARkBA,aAAa;EAAbA,aAAa,CAAbA,aAAa;EAAbA,aAAa,CAAbA,aAAa;EAAbA,aAAa,CAAbA,aAAa;EAAbA,aAAa,CAAbA,aAAa;EAAbA,aAAa,CAAbA,aAAa;AAAA,GAAbA,aAAa,KAAbA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}