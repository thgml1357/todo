{"ast":null,"code":"import React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ReactReduxContext, useStore } from 'react-redux';\nimport invariant from 'invariant';\nimport isEmpty from 'lodash/isEmpty';\nimport isFunction from 'lodash/isFunction';\nimport isString from 'lodash/isString';\nimport conformsTo from 'lodash/conformsTo';\nimport isObject from 'lodash/isObject';\n\n/**\n * Forces a reload of the injected reducers. i.e. Causes `createReducer` to be\n * called again with the injected reducers. Useful for hot-reloading.\n *\n * @param store The redux store that has been configured with\n *                  `createInjectorsEnhancer`\n * @example\n * forceReducerReload(store);\n *\n * @public\n */\nfunction forceReducerReload(store) {\n  store.replaceReducer(store.createReducer(store.injectedReducers));\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\n\n/**\n * Validates the redux store is set up properly to work with this library.\n */\n\nfunction checkStore(store) {\n  var shape = {\n    dispatch: isFunction,\n    subscribe: isFunction,\n    getState: isFunction,\n    replaceReducer: isFunction,\n    runSaga: isFunction,\n    createReducer: isFunction,\n    injectedReducers: isObject,\n    injectedSagas: isObject\n  };\n  invariant(conformsTo(store, shape), '(redux-injectors...) checkStore: Expected a redux store that has been configured for use with redux-injectors.');\n}\nfunction injectReducerFactory(store, isValid) {\n  return function injectReducer(key, reducer) {\n    if (!isValid) checkStore(store);\n    invariant(isString(key) && !isEmpty(key) && isFunction(reducer), '(redux-injectors...) injectReducer: Expected `reducer` to be a reducer function'); // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\n\n    if (Reflect.has(store.injectedReducers, key) && store.injectedReducers[key] === reducer) return;\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\n\n    store.replaceReducer(store.createReducer(store.injectedReducers));\n  };\n}\nfunction getInjectors(store) {\n  checkStore(store);\n  return {\n    injectReducer: injectReducerFactory(store, true)\n  };\n}\n\n/**\n * A higher-order component that dynamically injects a reducer when the\n * component is instantiated\n *\n * @param {Object} params\n * @param {string} params.key The key to inject the reducer under\n * @param {function} params.reducer The reducer that will be injected\n *\n * @example\n *\n * class BooksManager extends React.PureComponent {\n *   render() {\n *     return null;\n *   }\n * }\n *\n * export default injectReducer({ key: \"books\", reducer: booksReducer })(BooksManager)\n *\n * @public\n */\n\nvar injectReducer = function (_ref) {\n  var key = _ref.key,\n    reducer = _ref.reducer;\n  return function (WrappedComponent) {\n    var ReducerInjector = /*#__PURE__*/\n    function (_React$Component) {\n      _inherits(ReducerInjector, _React$Component);\n      function ReducerInjector(props, context) {\n        var _this;\n        _classCallCheck(this, ReducerInjector);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(ReducerInjector).call(this, props, context));\n        getInjectors(context.store).injectReducer(key, reducer);\n        return _this;\n      }\n      _createClass(ReducerInjector, [{\n        key: \"render\",\n        value: function render() {\n          return React.createElement(WrappedComponent, this.props);\n        }\n      }]);\n      return ReducerInjector;\n    }(React.Component);\n    _defineProperty(ReducerInjector, \"WrappedComponent\", WrappedComponent);\n    _defineProperty(ReducerInjector, \"contextType\", ReactReduxContext);\n    _defineProperty(ReducerInjector, \"displayName\", \"withReducer(\".concat(WrappedComponent.displayName || WrappedComponent.name || 'Component', \")\"));\n    return hoistNonReactStatics(ReducerInjector, WrappedComponent);\n  };\n};\n/**\n * A react hook that dynamically injects a reducer when the hook is run\n *\n * @param {Object} params\n * @param {string} params.key The key to inject the reducer under\n * @param {function} params.reducer The reducer that will be injected\n *\n * @example\n *\n * function BooksManager() {\n *   useInjectReducer({ key: \"books\", reducer: booksReducer })\n *\n *   return null;\n * }\n *\n * @public\n */\n\nvar useInjectReducer = function useInjectReducer(_ref2) {\n  var key = _ref2.key,\n    reducer = _ref2.reducer;\n  var store = useStore();\n  var isInjected = React.useRef(false);\n  if (!isInjected.current) {\n    getInjectors(store).injectReducer(key, reducer);\n    isInjected.current = true;\n  }\n};\nvar RESTART_ON_REMOUNT = '@@saga-injector/restart-on-remount';\nvar DAEMON = '@@saga-injector/daemon';\nvar ONCE_TILL_UNMOUNT = '@@saga-injector/once-till-unmount';\n/**\n * An enum of all the possible saga injection behaviours\n *\n * @property {String} RESTART_ON_REMOUNT The saga will be started on component instantiation and cancelled with\n * `task.cancel()` on component unmount for improved performance.\n * @property {String} DAEMON Causes the saga to be started on component instantiation and never canceled\n * or started again.\n * @property {String} ONCE_TILL_UNMOUNT Behaves like 'RESTART_ON_REMOUNT' but never runs it again.\n *\n * @enum\n * @public\n */\n\nvar SagaInjectionModes = {\n  RESTART_ON_REMOUNT: RESTART_ON_REMOUNT,\n  DAEMON: DAEMON,\n  ONCE_TILL_UNMOUNT: ONCE_TILL_UNMOUNT\n};\nvar allowedModes = [RESTART_ON_REMOUNT, DAEMON, ONCE_TILL_UNMOUNT];\nvar checkKey = function checkKey(key) {\n  return invariant(isString(key) && !isEmpty(key), '(redux-injectors...) injectSaga: Expected `key` to be a non empty string');\n};\nvar checkDescriptor = function checkDescriptor(descriptor) {\n  var shape = {\n    saga: isFunction,\n    mode: function mode(_mode) {\n      return isString(_mode) && allowedModes.includes(_mode);\n    }\n  };\n  invariant(conformsTo(descriptor, shape), '(redux-injectors...) injectSaga: Expected a valid saga descriptor');\n};\nfunction injectSagaFactory(store, isValid) {\n  return function injectSaga(key) {\n    var descriptor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!isValid) checkStore(store);\n    var newDescriptor = _objectSpread2({}, descriptor, {\n      mode: descriptor.mode || DAEMON\n    });\n    var saga = newDescriptor.saga,\n      mode = newDescriptor.mode;\n    checkKey(key);\n    checkDescriptor(newDescriptor);\n    var hasSaga = Reflect.has(store.injectedSagas, key);\n    if (process.env.NODE_ENV !== 'production') {\n      var oldDescriptor = store.injectedSagas[key]; // enable hot reloading of daemon and once-till-unmount sagas\n\n      if (hasSaga && oldDescriptor.saga !== saga) {\n        oldDescriptor.task.cancel();\n        hasSaga = false;\n      }\n    }\n    if (!hasSaga || hasSaga && mode !== DAEMON && mode !== ONCE_TILL_UNMOUNT) {\n      /* eslint-disable no-param-reassign */\n      store.injectedSagas[key] = _objectSpread2({}, newDescriptor, {\n        task: store.runSaga(saga)\n      });\n      /* eslint-enable no-param-reassign */\n    }\n  };\n}\n\nfunction ejectSagaFactory(store, isValid) {\n  return function ejectSaga(key) {\n    if (!isValid) checkStore(store);\n    checkKey(key);\n    if (Reflect.has(store.injectedSagas, key)) {\n      var descriptor = store.injectedSagas[key];\n      if (descriptor.mode && descriptor.mode !== DAEMON) {\n        descriptor.task.cancel(); // Clean up in production; in development we need `descriptor.saga` for hot reloading\n\n        if (process.env.NODE_ENV === 'production') {\n          // Need some value to be able to detect `ONCE_TILL_UNMOUNT` sagas in `injectSaga`\n          store.injectedSagas[key] = 'done'; // eslint-disable-line no-param-reassign\n        }\n      }\n    }\n  };\n}\n\nfunction getInjectors$1(store) {\n  checkStore(store);\n  return {\n    injectSaga: injectSagaFactory(store, true),\n    ejectSaga: ejectSagaFactory(store, true)\n  };\n}\n\n/**\n * A higher-order component that dynamically injects a saga when the component\n * is instantiated. There are several possible \"modes\" / \"behaviours\" that\n * dictate how and when the saga should be injected and ejected\n *\n * @param {Object} params\n * @param {string} params.key The key to inject the saga under\n * @param {function} params.saga The saga that will be injected\n * @param {string} [params.mode] The injection behaviour to use. The default is\n * `SagaInjectionModes.DAEMON` which causes the saga to be started on component\n * instantiation and never canceled or started again. @see\n * {@link SagaInjectionModes} for the other possible modes.\n *\n * @example\n *\n * class BooksManager extends React.PureComponent {\n *  render() {\n *    return null;\n *  }\n * }\n *\n * export default injectSaga({ key: \"books\", saga: booksSaga })(BooksManager)\n *\n * @public\n *\n */\n\nvar injectSaga = function (_ref) {\n  var key = _ref.key,\n    saga = _ref.saga,\n    mode = _ref.mode;\n  return function (WrappedComponent) {\n    var InjectSaga = /*#__PURE__*/\n    function (_React$Component) {\n      _inherits(InjectSaga, _React$Component);\n      function InjectSaga(props, context) {\n        var _this;\n        _classCallCheck(this, InjectSaga);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(InjectSaga).call(this, props, context));\n        _this.injectors = getInjectors$1(context.store);\n        _this.injectors.injectSaga(key, {\n          saga: saga,\n          mode: mode\n        });\n        return _this;\n      }\n      _createClass(InjectSaga, [{\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          this.injectors.ejectSaga(key);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          return React.createElement(WrappedComponent, this.props);\n        }\n      }]);\n      return InjectSaga;\n    }(React.Component);\n    _defineProperty(InjectSaga, \"WrappedComponent\", WrappedComponent);\n    _defineProperty(InjectSaga, \"contextType\", ReactReduxContext);\n    _defineProperty(InjectSaga, \"displayName\", \"withSaga(\".concat(WrappedComponent.displayName || WrappedComponent.name || 'Component', \")\"));\n    return hoistNonReactStatics(InjectSaga, WrappedComponent);\n  };\n};\n/**\n * A react hook that dynamically injects a saga when the hook is run\n *\n * @param {Object} params\n * @param {string} params.key The key to inject the saga under\n * @param {function} params.saga The saga that will be injected\n * @param {string} [params.mode] The injection behaviour to use. The default is\n * `SagaInjectionModes.DAEMON` which causes the saga to be started on component\n * instantiation and never canceled or started again. @see\n * {@link SagaInjectionModes} for the other possible modes.\n *\n * @example\n *\n * function BooksManager() {\n *   useInjectSaga({ key: \"books\", saga: booksSaga })\n *\n *   return null;\n * }\n *\n * @public\n */\n\nvar useInjectSaga = function useInjectSaga(_ref2) {\n  var key = _ref2.key,\n    saga = _ref2.saga,\n    mode = _ref2.mode;\n  var store = useStore();\n  var isInjected = React.useRef(false);\n  if (!isInjected.current) {\n    getInjectors$1(store).injectSaga(key, {\n      saga: saga,\n      mode: mode\n    });\n    isInjected.current = true;\n  }\n  React.useEffect(function () {\n    return function () {\n      getInjectors$1(store).ejectSaga(key);\n    };\n  }, []);\n};\n\n/**\n * Creates a store enhancer that when applied will setup the store to allow the\n * injectors to work properly\n *\n * @param {Object} params\n * @param {function} params.runSaga A function that runs a saga. Should usually be `sagaMiddleware.run`\n * @param {function} params.createReducer A function that should create and\n * return the root reducer. It's passed the injected reducers as the first\n * parameter. These should be added to the root reducer using `combineReducer`\n * or a similar method.\n *\n * @example\n *\n * import { createStore } from \"redux\"\n * import { createInjectorsEnhancer } from \"redux-injectors\"\n *\n * function createReducer(injectedReducers = {}) {\n *  const rootReducer = combineReducers({\n *    ...injectedReducers,\n *    // other non-injected reducers can go here...\n *  });\n *\n *  return rootReducer\n * }\n * const runSaga = sagaMiddleware.run\n *\n * const store = createStore(\n *   createReducer(),\n *   initialState,\n *   createInjectorsEnhancer({\n *     createReducer,\n *     runSaga,\n *   })\n * )\n *\n * @public\n */\n\nfunction createInjectorsEnhancer(params) {\n  invariant(conformsTo(params, {\n    runSaga: isFunction,\n    createReducer: isFunction\n  }), '(redux-injectors...) createInjectorsEnhancer: params `runSaga` and ' + '`createReducer` are required.');\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n      return _objectSpread2({}, store, {\n        createReducer: params.createReducer,\n        runSaga: params.runSaga,\n        injectedReducers: {},\n        // Reducer registry\n        injectedSagas: {} // Saga registry\n      });\n    };\n  };\n}\n\nexport { SagaInjectionModes, createInjectorsEnhancer, forceReducerReload, injectReducer, injectSaga, useInjectReducer, useInjectSaga };","map":{"version":3,"names":["React","hoistNonReactStatics","ReactReduxContext","useStore","invariant","isEmpty","isFunction","isString","conformsTo","isObject","forceReducerReload","store","replaceReducer","createReducer","injectedReducers","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_defineProperty","obj","value","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_inherits","subClass","superClass","create","constructor","_setPrototypeOf","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","p","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","call","checkStore","shape","dispatch","subscribe","getState","runSaga","injectedSagas","injectReducerFactory","isValid","injectReducer","reducer","Reflect","has","getInjectors","_ref","WrappedComponent","ReducerInjector","_React$Component","context","_this","render","createElement","Component","concat","displayName","name","useInjectReducer","_ref2","isInjected","useRef","current","RESTART_ON_REMOUNT","DAEMON","ONCE_TILL_UNMOUNT","SagaInjectionModes","allowedModes","checkKey","checkDescriptor","saga","mode","_mode","includes","injectSagaFactory","injectSaga","undefined","newDescriptor","hasSaga","process","env","NODE_ENV","oldDescriptor","task","cancel","ejectSagaFactory","ejectSaga","getInjectors$1","InjectSaga","injectors","componentWillUnmount","useInjectSaga","useEffect","createInjectorsEnhancer","params","createStore"],"sources":["/Users/jeonsohee/Desktop/todo/node_modules/redux-injectors/dist/index.esm.js"],"sourcesContent":["import React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ReactReduxContext, useStore } from 'react-redux';\nimport invariant from 'invariant';\nimport isEmpty from 'lodash/isEmpty';\nimport isFunction from 'lodash/isFunction';\nimport isString from 'lodash/isString';\nimport conformsTo from 'lodash/conformsTo';\nimport isObject from 'lodash/isObject';\n\n/**\n * Forces a reload of the injected reducers. i.e. Causes `createReducer` to be\n * called again with the injected reducers. Useful for hot-reloading.\n *\n * @param store The redux store that has been configured with\n *                  `createInjectorsEnhancer`\n * @example\n * forceReducerReload(store);\n *\n * @public\n */\nfunction forceReducerReload(store) {\n  store.replaceReducer(store.createReducer(store.injectedReducers));\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\n/**\n * Validates the redux store is set up properly to work with this library.\n */\n\nfunction checkStore(store) {\n  var shape = {\n    dispatch: isFunction,\n    subscribe: isFunction,\n    getState: isFunction,\n    replaceReducer: isFunction,\n    runSaga: isFunction,\n    createReducer: isFunction,\n    injectedReducers: isObject,\n    injectedSagas: isObject\n  };\n  invariant(conformsTo(store, shape), '(redux-injectors...) checkStore: Expected a redux store that has been configured for use with redux-injectors.');\n}\n\nfunction injectReducerFactory(store, isValid) {\n  return function injectReducer(key, reducer) {\n    if (!isValid) checkStore(store);\n    invariant(isString(key) && !isEmpty(key) && isFunction(reducer), '(redux-injectors...) injectReducer: Expected `reducer` to be a reducer function'); // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\n\n    if (Reflect.has(store.injectedReducers, key) && store.injectedReducers[key] === reducer) return;\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\n\n    store.replaceReducer(store.createReducer(store.injectedReducers));\n  };\n}\nfunction getInjectors(store) {\n  checkStore(store);\n  return {\n    injectReducer: injectReducerFactory(store, true)\n  };\n}\n\n/**\n * A higher-order component that dynamically injects a reducer when the\n * component is instantiated\n *\n * @param {Object} params\n * @param {string} params.key The key to inject the reducer under\n * @param {function} params.reducer The reducer that will be injected\n *\n * @example\n *\n * class BooksManager extends React.PureComponent {\n *   render() {\n *     return null;\n *   }\n * }\n *\n * export default injectReducer({ key: \"books\", reducer: booksReducer })(BooksManager)\n *\n * @public\n */\n\nvar injectReducer = (function (_ref) {\n  var key = _ref.key,\n      reducer = _ref.reducer;\n  return function (WrappedComponent) {\n    var ReducerInjector =\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inherits(ReducerInjector, _React$Component);\n\n      function ReducerInjector(props, context) {\n        var _this;\n\n        _classCallCheck(this, ReducerInjector);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(ReducerInjector).call(this, props, context));\n        getInjectors(context.store).injectReducer(key, reducer);\n        return _this;\n      }\n\n      _createClass(ReducerInjector, [{\n        key: \"render\",\n        value: function render() {\n          return React.createElement(WrappedComponent, this.props);\n        }\n      }]);\n\n      return ReducerInjector;\n    }(React.Component);\n\n    _defineProperty(ReducerInjector, \"WrappedComponent\", WrappedComponent);\n\n    _defineProperty(ReducerInjector, \"contextType\", ReactReduxContext);\n\n    _defineProperty(ReducerInjector, \"displayName\", \"withReducer(\".concat(WrappedComponent.displayName || WrappedComponent.name || 'Component', \")\"));\n\n    return hoistNonReactStatics(ReducerInjector, WrappedComponent);\n  };\n});\n/**\n * A react hook that dynamically injects a reducer when the hook is run\n *\n * @param {Object} params\n * @param {string} params.key The key to inject the reducer under\n * @param {function} params.reducer The reducer that will be injected\n *\n * @example\n *\n * function BooksManager() {\n *   useInjectReducer({ key: \"books\", reducer: booksReducer })\n *\n *   return null;\n * }\n *\n * @public\n */\n\nvar useInjectReducer = function useInjectReducer(_ref2) {\n  var key = _ref2.key,\n      reducer = _ref2.reducer;\n  var store = useStore();\n  var isInjected = React.useRef(false);\n\n  if (!isInjected.current) {\n    getInjectors(store).injectReducer(key, reducer);\n    isInjected.current = true;\n  }\n};\n\nvar RESTART_ON_REMOUNT = '@@saga-injector/restart-on-remount';\nvar DAEMON = '@@saga-injector/daemon';\nvar ONCE_TILL_UNMOUNT = '@@saga-injector/once-till-unmount';\n/**\n * An enum of all the possible saga injection behaviours\n *\n * @property {String} RESTART_ON_REMOUNT The saga will be started on component instantiation and cancelled with\n * `task.cancel()` on component unmount for improved performance.\n * @property {String} DAEMON Causes the saga to be started on component instantiation and never canceled\n * or started again.\n * @property {String} ONCE_TILL_UNMOUNT Behaves like 'RESTART_ON_REMOUNT' but never runs it again.\n *\n * @enum\n * @public\n */\n\nvar SagaInjectionModes = {\n  RESTART_ON_REMOUNT: RESTART_ON_REMOUNT,\n  DAEMON: DAEMON,\n  ONCE_TILL_UNMOUNT: ONCE_TILL_UNMOUNT\n};\n\nvar allowedModes = [RESTART_ON_REMOUNT, DAEMON, ONCE_TILL_UNMOUNT];\n\nvar checkKey = function checkKey(key) {\n  return invariant(isString(key) && !isEmpty(key), '(redux-injectors...) injectSaga: Expected `key` to be a non empty string');\n};\n\nvar checkDescriptor = function checkDescriptor(descriptor) {\n  var shape = {\n    saga: isFunction,\n    mode: function mode(_mode) {\n      return isString(_mode) && allowedModes.includes(_mode);\n    }\n  };\n  invariant(conformsTo(descriptor, shape), '(redux-injectors...) injectSaga: Expected a valid saga descriptor');\n};\n\nfunction injectSagaFactory(store, isValid) {\n  return function injectSaga(key) {\n    var descriptor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!isValid) checkStore(store);\n\n    var newDescriptor = _objectSpread2({}, descriptor, {\n      mode: descriptor.mode || DAEMON\n    });\n\n    var saga = newDescriptor.saga,\n        mode = newDescriptor.mode;\n    checkKey(key);\n    checkDescriptor(newDescriptor);\n    var hasSaga = Reflect.has(store.injectedSagas, key);\n\n    if (process.env.NODE_ENV !== 'production') {\n      var oldDescriptor = store.injectedSagas[key]; // enable hot reloading of daemon and once-till-unmount sagas\n\n      if (hasSaga && oldDescriptor.saga !== saga) {\n        oldDescriptor.task.cancel();\n        hasSaga = false;\n      }\n    }\n\n    if (!hasSaga || hasSaga && mode !== DAEMON && mode !== ONCE_TILL_UNMOUNT) {\n      /* eslint-disable no-param-reassign */\n      store.injectedSagas[key] = _objectSpread2({}, newDescriptor, {\n        task: store.runSaga(saga)\n      });\n      /* eslint-enable no-param-reassign */\n    }\n  };\n}\nfunction ejectSagaFactory(store, isValid) {\n  return function ejectSaga(key) {\n    if (!isValid) checkStore(store);\n    checkKey(key);\n\n    if (Reflect.has(store.injectedSagas, key)) {\n      var descriptor = store.injectedSagas[key];\n\n      if (descriptor.mode && descriptor.mode !== DAEMON) {\n        descriptor.task.cancel(); // Clean up in production; in development we need `descriptor.saga` for hot reloading\n\n        if (process.env.NODE_ENV === 'production') {\n          // Need some value to be able to detect `ONCE_TILL_UNMOUNT` sagas in `injectSaga`\n          store.injectedSagas[key] = 'done'; // eslint-disable-line no-param-reassign\n        }\n      }\n    }\n  };\n}\nfunction getInjectors$1(store) {\n  checkStore(store);\n  return {\n    injectSaga: injectSagaFactory(store, true),\n    ejectSaga: ejectSagaFactory(store, true)\n  };\n}\n\n/**\n * A higher-order component that dynamically injects a saga when the component\n * is instantiated. There are several possible \"modes\" / \"behaviours\" that\n * dictate how and when the saga should be injected and ejected\n *\n * @param {Object} params\n * @param {string} params.key The key to inject the saga under\n * @param {function} params.saga The saga that will be injected\n * @param {string} [params.mode] The injection behaviour to use. The default is\n * `SagaInjectionModes.DAEMON` which causes the saga to be started on component\n * instantiation and never canceled or started again. @see\n * {@link SagaInjectionModes} for the other possible modes.\n *\n * @example\n *\n * class BooksManager extends React.PureComponent {\n *  render() {\n *    return null;\n *  }\n * }\n *\n * export default injectSaga({ key: \"books\", saga: booksSaga })(BooksManager)\n *\n * @public\n *\n */\n\nvar injectSaga = (function (_ref) {\n  var key = _ref.key,\n      saga = _ref.saga,\n      mode = _ref.mode;\n  return function (WrappedComponent) {\n    var InjectSaga =\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inherits(InjectSaga, _React$Component);\n\n      function InjectSaga(props, context) {\n        var _this;\n\n        _classCallCheck(this, InjectSaga);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(InjectSaga).call(this, props, context));\n        _this.injectors = getInjectors$1(context.store);\n\n        _this.injectors.injectSaga(key, {\n          saga: saga,\n          mode: mode\n        });\n\n        return _this;\n      }\n\n      _createClass(InjectSaga, [{\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          this.injectors.ejectSaga(key);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          return React.createElement(WrappedComponent, this.props);\n        }\n      }]);\n\n      return InjectSaga;\n    }(React.Component);\n\n    _defineProperty(InjectSaga, \"WrappedComponent\", WrappedComponent);\n\n    _defineProperty(InjectSaga, \"contextType\", ReactReduxContext);\n\n    _defineProperty(InjectSaga, \"displayName\", \"withSaga(\".concat(WrappedComponent.displayName || WrappedComponent.name || 'Component', \")\"));\n\n    return hoistNonReactStatics(InjectSaga, WrappedComponent);\n  };\n});\n/**\n * A react hook that dynamically injects a saga when the hook is run\n *\n * @param {Object} params\n * @param {string} params.key The key to inject the saga under\n * @param {function} params.saga The saga that will be injected\n * @param {string} [params.mode] The injection behaviour to use. The default is\n * `SagaInjectionModes.DAEMON` which causes the saga to be started on component\n * instantiation and never canceled or started again. @see\n * {@link SagaInjectionModes} for the other possible modes.\n *\n * @example\n *\n * function BooksManager() {\n *   useInjectSaga({ key: \"books\", saga: booksSaga })\n *\n *   return null;\n * }\n *\n * @public\n */\n\nvar useInjectSaga = function useInjectSaga(_ref2) {\n  var key = _ref2.key,\n      saga = _ref2.saga,\n      mode = _ref2.mode;\n  var store = useStore();\n  var isInjected = React.useRef(false);\n\n  if (!isInjected.current) {\n    getInjectors$1(store).injectSaga(key, {\n      saga: saga,\n      mode: mode\n    });\n    isInjected.current = true;\n  }\n\n  React.useEffect(function () {\n    return function () {\n      getInjectors$1(store).ejectSaga(key);\n    };\n  }, []);\n};\n\n/**\n * Creates a store enhancer that when applied will setup the store to allow the\n * injectors to work properly\n *\n * @param {Object} params\n * @param {function} params.runSaga A function that runs a saga. Should usually be `sagaMiddleware.run`\n * @param {function} params.createReducer A function that should create and\n * return the root reducer. It's passed the injected reducers as the first\n * parameter. These should be added to the root reducer using `combineReducer`\n * or a similar method.\n *\n * @example\n *\n * import { createStore } from \"redux\"\n * import { createInjectorsEnhancer } from \"redux-injectors\"\n *\n * function createReducer(injectedReducers = {}) {\n *  const rootReducer = combineReducers({\n *    ...injectedReducers,\n *    // other non-injected reducers can go here...\n *  });\n *\n *  return rootReducer\n * }\n * const runSaga = sagaMiddleware.run\n *\n * const store = createStore(\n *   createReducer(),\n *   initialState,\n *   createInjectorsEnhancer({\n *     createReducer,\n *     runSaga,\n *   })\n * )\n *\n * @public\n */\n\nfunction createInjectorsEnhancer(params) {\n  invariant(conformsTo(params, {\n    runSaga: isFunction,\n    createReducer: isFunction\n  }), '(redux-injectors...) createInjectorsEnhancer: params `runSaga` and ' + '`createReducer` are required.');\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n      return _objectSpread2({}, store, {\n        createReducer: params.createReducer,\n        runSaga: params.runSaga,\n        injectedReducers: {},\n        // Reducer registry\n        injectedSagas: {} // Saga registry\n\n      });\n    };\n  };\n}\n\nexport { SagaInjectionModes, createInjectorsEnhancer, forceReducerReload, injectReducer, injectSaga, useInjectReducer, useInjectSaga };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}