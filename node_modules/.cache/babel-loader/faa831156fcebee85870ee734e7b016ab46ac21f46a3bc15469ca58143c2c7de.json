{"ast":null,"code":"import { createSelector } from '@reduxjs/toolkit';\nimport { initialState } from '.';\nimport { themes } from '../themes';\nimport { isSystemDark } from '../utils';\nexport const selectTheme = createSelector([state => state.theme || initialState], theme => {\n  if (theme.selected === 'system') {\n    return isSystemDark ? themes.dark : themes.light;\n  }\n  return themes[theme.selected];\n});\nexport const selectThemeKey = createSelector([state => state.theme || initialState], theme => theme.selected);","map":{"version":3,"names":["createSelector","initialState","themes","isSystemDark","selectTheme","state","theme","selected","dark","light","selectThemeKey"],"sources":["/Users/jeonsohee/Desktop/todo/src/styles/theme/slice/selectors.ts"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nimport { RootState } from 'types';\nimport { initialState } from '.';\nimport { themes } from '../themes';\nimport { isSystemDark } from '../utils';\n\nexport const selectTheme = createSelector(\n  [(state: RootState) => state.theme || initialState],\n  theme => {\n    if (theme.selected === 'system') {\n      return isSystemDark ? themes.dark : themes.light;\n    }\n    return themes[theme.selected];\n  },\n);\n\nexport const selectThemeKey = createSelector(\n  [(state: RootState) => state.theme || initialState],\n  theme => theme.selected,\n);\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AAGjD,SAASC,YAAY,QAAQ,GAAG;AAChC,SAASC,MAAM,QAAQ,WAAW;AAClC,SAASC,YAAY,QAAQ,UAAU;AAEvC,OAAO,MAAMC,WAAW,GAAGJ,cAAc,CACvC,CAAEK,KAAgB,IAAKA,KAAK,CAACC,KAAK,IAAIL,YAAY,CAAC,EACnDK,KAAK,IAAI;EACP,IAAIA,KAAK,CAACC,QAAQ,KAAK,QAAQ,EAAE;IAC/B,OAAOJ,YAAY,GAAGD,MAAM,CAACM,IAAI,GAAGN,MAAM,CAACO,KAAK;EAClD;EACA,OAAOP,MAAM,CAACI,KAAK,CAACC,QAAQ,CAAC;AAC/B,CAAC,CACF;AAED,OAAO,MAAMG,cAAc,GAAGV,cAAc,CAC1C,CAAEK,KAAgB,IAAKA,KAAK,CAACC,KAAK,IAAIL,YAAY,CAAC,EACnDK,KAAK,IAAIA,KAAK,CAACC,QAAQ,CACxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}