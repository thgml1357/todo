{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { createInjectorsEnhancer } from 'redux-injectors';\nimport createSagaMiddleware from 'redux-saga';\nimport { createReducer } from './reducers';\nexport function configureAppStore() {\n  const reduxSagaMonitorOptions = {};\n  const sagaMiddleware = createSagaMiddleware(reduxSagaMonitorOptions);\n  const {\n    run: runSaga\n  } = sagaMiddleware;\n\n  // Create the store with saga middleware\n  const middlewares = [sagaMiddleware];\n  const enhancers = [createInjectorsEnhancer({\n    createReducer,\n    runSaga\n  })];\n  const store = configureStore({\n    reducer: createReducer(),\n    middleware: defaultMiddleware => [...defaultMiddleware(), ...middlewares],\n    devTools: /* istanbul ignore next line */\n    process.env.NODE_ENV !== 'production' || process.env.PUBLIC_URL.length > 0,\n    enhancers\n  });\n  return store;\n}","map":{"version":3,"names":["configureStore","createInjectorsEnhancer","createSagaMiddleware","createReducer","configureAppStore","reduxSagaMonitorOptions","sagaMiddleware","run","runSaga","middlewares","enhancers","store","reducer","middleware","defaultMiddleware","devTools","process","env","NODE_ENV","PUBLIC_URL","length"],"sources":["/Users/jeonsohee/Desktop/todo/src/store/configureStore.ts"],"sourcesContent":["import { configureStore, StoreEnhancer } from '@reduxjs/toolkit';\nimport { createInjectorsEnhancer } from 'redux-injectors';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { createReducer } from './reducers';\n\nexport function configureAppStore() {\n  const reduxSagaMonitorOptions = {};\n  const sagaMiddleware = createSagaMiddleware(reduxSagaMonitorOptions);\n  const { run: runSaga } = sagaMiddleware;\n\n  // Create the store with saga middleware\n  const middlewares = [sagaMiddleware];\n\n  const enhancers = [\n    createInjectorsEnhancer({\n      createReducer,\n      runSaga,\n    }),\n  ] as StoreEnhancer[];\n\n  const store = configureStore({\n    reducer: createReducer(),\n    middleware: defaultMiddleware => [...defaultMiddleware(), ...middlewares],\n    devTools:\n      /* istanbul ignore next line */\n      process.env.NODE_ENV !== 'production' ||\n      process.env.PUBLIC_URL.length > 0,\n    enhancers,\n  });\n\n  return store;\n}\n"],"mappings":"AAAA,SAASA,cAAc,QAAuB,kBAAkB;AAChE,SAASC,uBAAuB,QAAQ,iBAAiB;AACzD,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,SAASC,aAAa,QAAQ,YAAY;AAE1C,OAAO,SAASC,iBAAiB,GAAG;EAClC,MAAMC,uBAAuB,GAAG,CAAC,CAAC;EAClC,MAAMC,cAAc,GAAGJ,oBAAoB,CAACG,uBAAuB,CAAC;EACpE,MAAM;IAAEE,GAAG,EAAEC;EAAQ,CAAC,GAAGF,cAAc;;EAEvC;EACA,MAAMG,WAAW,GAAG,CAACH,cAAc,CAAC;EAEpC,MAAMI,SAAS,GAAG,CAChBT,uBAAuB,CAAC;IACtBE,aAAa;IACbK;EACF,CAAC,CAAC,CACgB;EAEpB,MAAMG,KAAK,GAAGX,cAAc,CAAC;IAC3BY,OAAO,EAAET,aAAa,EAAE;IACxBU,UAAU,EAAEC,iBAAiB,IAAI,CAAC,GAAGA,iBAAiB,EAAE,EAAE,GAAGL,WAAW,CAAC;IACzEM,QAAQ,EACN;IACAC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IACrCF,OAAO,CAACC,GAAG,CAACE,UAAU,CAACC,MAAM,GAAG,CAAC;IACnCV;EACF,CAAC,CAAC;EAEF,OAAOC,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}