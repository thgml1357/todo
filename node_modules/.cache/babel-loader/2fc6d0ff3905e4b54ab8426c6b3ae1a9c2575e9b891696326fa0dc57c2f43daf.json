{"ast":null,"code":"var _jsxFileName = \"/Users/jeonsohee/Desktop/todo/src/app/pages/NotFoundPage/Loadable.tsx\";\n/**\n * Asynchronously loads the component for NotFoundPage\n */\n\nimport * as React from 'react';\nimport { lazyLoad } from 'utils/loadable';\nimport { LoadingIndicator } from 'app/components/LoadingIndicator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NotFoundPage = lazyLoad(_c = () => import('./index'), module => module.NotFoundPage, {\n  fallback: /*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 15\n  }, this)\n});\n_c2 = NotFoundPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"NotFoundPage$lazyLoad\");\n$RefreshReg$(_c2, \"NotFoundPage\");","map":{"version":3,"names":["React","lazyLoad","LoadingIndicator","NotFoundPage","module","fallback"],"sources":["/Users/jeonsohee/Desktop/todo/src/app/pages/NotFoundPage/Loadable.tsx"],"sourcesContent":["/**\n * Asynchronously loads the component for NotFoundPage\n */\n\nimport * as React from 'react';\nimport { lazyLoad } from 'utils/loadable';\nimport { LoadingIndicator } from 'app/components/LoadingIndicator';\n\nexport const NotFoundPage = lazyLoad(\n  () => import('./index'),\n  module => module.NotFoundPage,\n  {\n    fallback: <LoadingIndicator />,\n  },\n);\n"],"mappings":";AAAA;AACA;AACA;;AAEA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,gBAAgB,QAAQ,iCAAiC;AAAC;AAEnE,OAAO,MAAMC,YAAY,GAAGF,QAAQ,MAClC,MAAM,MAAM,CAAC,SAAS,CAAC,EACvBG,MAAM,IAAIA,MAAM,CAACD,YAAY,EAC7B;EACEE,QAAQ,eAAE,QAAC,gBAAgB;IAAA;IAAA;IAAA;EAAA;AAC7B,CAAC,CACF;AAAC,MANWF,YAAY;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}